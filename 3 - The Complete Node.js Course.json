{
    "0 - Welcome": "https://www.filepicker.io/api/file/1N9dD3plRdGGdB9N2hId",
    "1 - What is Node": "https://www.filepicker.io/api/file/tVgsVtj0QXqukKmYX9bZ",
    "2 - Node Architecture": "https://www.filepicker.io/api/file/cDUvB6HuR7OLgFsmSblM",
    "3 - How Node Works": "https://www.filepicker.io/api/file/slEM0SvSR968ZtK5TQSF",
    "4 - Installing Node": "https://www.filepicker.io/api/file/Hwmsn92CR0uI42I5iglq",
    "5 - Your First Node Program": "https://www.filepicker.io/api/file/fARRGIkQhiV2b75tF0wg",
    "6 - Course Structure": "https://www.filepicker.io/api/file/dSIU1WpaQEu6Ek2fmoFn",
    "7 - Recap": "https://www.filepicker.io/api/file/1IEIXXL8QrazhGomdlG8",
    "8 - Introduction": "https://www.filepicker.io/api/file/4cCWFxSHSwKoeTzlVGws",
    "9 - Global Object": "https://www.filepicker.io/api/file/60JgESfBQbKIdNdHZwJx",
    "10 - Modules": "https://www.filepicker.io/api/file/EqNYP7dqRvy6loc0ePyk",
    "11 - Creating a Module": "https://www.filepicker.io/api/file/MBsYntOUSX2bJL2GRzpZ",
    "12 - Loading a Module": "https://www.filepicker.io/api/file/JZdx7ShGQimahqVwe4zd",
    "13 - Module Wrapper Function": "https://www.filepicker.io/api/file/2kVI3xQR5CytTBBLbh5N",
    "14 - Path Module": "https://www.filepicker.io/api/file/mRPjFGKTsuWX0wy9c0Ap",
    "15 - OS Module": "https://www.filepicker.io/api/file/21nU7a6JQnW7yniHDo9r",
    "16 - File System Module": "https://www.filepicker.io/api/file/7w4i8cQVOk8OYA0FuXhw",
    "17 - Events Module": "https://www.filepicker.io/api/file/WMZs895SQiKdUlfCjaYV",
    "18 - Event Arguments": "https://www.filepicker.io/api/file/ge2yQGizTOU9U2Ows3KC",
    "19 - Extending EventEmitter": "https://www.filepicker.io/api/file/CKcgzlxxQBevBkX7EDIg",
    "20 - HTTP Module": "https://www.filepicker.io/api/file/NJKh1y1aSAGKHy6K2xOj",
    "21 - Node Core Recap": "https://www.filepicker.io/api/file/6d7RPW2dRtyz6ye6dKQg",
    "22 - Introduction": "https://www.filepicker.io/api/file/2uxYRPnQPeBQnhXzkCQV",
    "23 - Package.json": "https://www.filepicker.io/api/file/eZvEPw3ORIjxklrsJTA7",
    "24 - Installing a Node Package": "https://www.filepicker.io/api/file/euSKDRanR8enZZLSWzbj",
    "25 - Using a Package": "https://www.filepicker.io/api/file/wzTDOKaQYqrW0Fy74O1I",
    "26 - Package Dependencies": "https://www.filepicker.io/api/file/y9OHS6mhRieFY4uHlBJS",
    "27 - NPM Packages and Source Control": "https://www.filepicker.io/api/file/ebr1GdA6RI6PiWzVnvII",
    "28 - Semantic Versioning": "https://www.filepicker.io/api/file/DL0ONlyjTXmLRm2Pwjzm",
    "29 - Listing the Installed Packages": "https://www.filepicker.io/api/file/oN7SbqGZQ4aM55D4K4Rp",
    "30 - Viewing Registry Info for a Package": "https://www.filepicker.io/api/file/U379HnCOTfK9JQZdDdE7",
    "31 - Installing a Specific Version of a Package": "https://www.filepicker.io/api/file/sYp709zUQ76HkrRZJ335",
    "32 - Updating Local Packages": "https://www.filepicker.io/api/file/IYGfxaLGQF2AyOuOYCgO",
    "33 - DevDependencies": "https://www.filepicker.io/api/file/hL4YoT8QsGR0hhwPfaSd",
    "34 - Uninstalling a Package": "https://www.filepicker.io/api/file/v1Sb0AclR4Ohdj25FhfY",
    "35 - Working with Global Packages": "https://www.filepicker.io/api/file/A22Ecxx8RLXtdLnaNX7c",
    "36 - Publishing a Package": "https://www.filepicker.io/api/file/pguViPQMSTOQle1RF0gd",
    "37 - Updating a Published Package": "https://www.filepicker.io/api/file/xPFOFJ26RwyqF0xOIPjc",
    "38 - NPM Recap": "https://www.filepicker.io/api/file/lVw4HfRhSEqg6ovgNFjY",
    "39 - Introduction": "https://www.filepicker.io/api/file/sI56kb1RQHO06ZBOGiB5",
    "40 - RESTful Services": "https://www.filepicker.io/api/file/brV3X8rdTPK0qdGV7YEr",
    "41 - Introducing Express": "https://www.filepicker.io/api/file/4LzGfF1HTxu70bWMWaM9",
    "42 - Building Your First Web Server": "https://www.filepicker.io/api/file/8sDBZo9zQCS4Gg4V70in",
    "43 - Nodemon": "https://www.filepicker.io/api/file/Vo85e9uMQ5yxs0Qse2AL",
    "44 - Environment Variables": "https://www.filepicker.io/api/file/1CtPL6k1Q3tlNZDVRQO0",
    "45 - Route Parameters": "https://www.filepicker.io/api/file/HowQrm4TQpGT8qAiWAq4",
    "46 - Handling HTTP GET Requests": "https://www.filepicker.io/api/file/QJFyUm6fQ9asr75ZvUNw",
    "47 - Handling HTTP POST Requests": "https://www.filepicker.io/api/file/18CnyEUMQeGc0eVygGPV",
    "48 - Calling Endpoints Using Postman": "https://www.filepicker.io/api/file/G9zgOfrTTCHwPBDNR2Og",
    "49 - Input Validation": "https://www.filepicker.io/api/file/TKjtAdUR3qKPbBkgDPkH",
    "50 - Handling HTTP PUT Requests": "https://www.filepicker.io/api/file/sAv8UUzRkmv5asoHUjPS",
    "51 - Handling HTTP Delete Requests": "https://www.filepicker.io/api/file/o97HHakQSOmY0Pzyptcb",
    "52 - Project- Build the Genres API": "https://www.filepicker.io/api/file/2US7jGpxS9KQWcyGOBq0",
    "53 - Building RESTful APIs with Express Recap": "https://www.filepicker.io/api/file/TGnaiPmZTf26k38WUcFE",
    "55 - 1- Introduction": "https://www.filepicker.io/api/file/a9aGI1TQGery4WGPTNPA",
    "56 - 2- Middleware": "https://www.filepicker.io/api/file/S1ZW9Gf8T9a2ON0VBTHa",
    "57 - 3- Creating Custom Middleware": "https://www.filepicker.io/api/file/OQJRNrE4Tt6FwEL5tIbg",
    "58 - 4- Built-in Middleware": "https://www.filepicker.io/api/file/EvQXjSlQ1CuWcUUvXll8",
    "59 - 5- Third-party Middleware": "https://www.filepicker.io/api/file/XeEditGSFapvYq8hopyQ",
    "60 - 6- Environments": "https://www.filepicker.io/api/file/YAOeEmwTGyp9eL0mntYT",
    "61 - 7- Configuration": "https://www.filepicker.io/api/file/orBHR8TfRoOgWQ22qvsQ",
    "62 - 8- Debugging": "https://www.filepicker.io/api/file/raSqX8zNQHyLxlTcvPUb",
    "63 - 9- Templating Engines": "https://www.filepicker.io/api/file/wEa7lN9xQLiy2QxbMQXd",
    "64 - 10- Database Integration": "https://www.filepicker.io/api/file/MSajpY2uQcKjc6nemXBl",
    "65 - 11- Authentication": "https://www.filepicker.io/api/file/MdBq74mSFKgpczX6XnnZ",
    "66 - 12- Structuring Express Applications": "https://www.filepicker.io/api/file/1GuxxfIXTNeQvnOEdlac",
    "67 - 13- Project- Restructure the App": "https://www.filepicker.io/api/file/wvdMP8RTaiy7iQjXSFgg",
    "68 - Express- Advanced Topics Recap": "https://www.filepicker.io/api/file/WXPrDjaSQvCCXaYHiZAK",
    "69 - 1- Synchronous vs Asynchronous Code": "https://www.filepicker.io/api/file/jwV1NvOwTquwWA97xPg7",
    "70 - 2- Patterns for Dealing with Asynchronous Code": "https://www.filepicker.io/api/file/x51Tw9BAShu6UcHaSbWe",
    "71 - 3- Callbacks": "https://www.filepicker.io/api/file/23Gec0o7TqSlzyMR9KiP",
    "72 - 4- Callback Hell": "https://www.filepicker.io/api/file/oO8NNrujTzilELiQWtrI",
    "73 - 5- Named Functions to Rescue": "https://www.filepicker.io/api/file/xxJB2AyfR7Gbu5iJnn04",
    "74 - 6- Promises": "https://www.filepicker.io/api/file/OJgHYAAFQYCa8tC9wIoN",
    "75 - 7- Replacing Callbacks with Promises": "https://www.filepicker.io/api/file/3XpDF7fnQFWFh9K7bNXo",
    "76 - 8- Consuming Promises": "https://www.filepicker.io/api/file/bVr8ugosQfmnX1YdIXFE",
    "77 - 9- Creating Settled Promises": "https://www.filepicker.io/api/file/d0XWSvhlS5Cy8JSvSqOm",
    "78 - 10- Running Promises in Parallel": "https://www.filepicker.io/api/file/nZQHsQCfR29FytMfcxg4",
    "79 - 11- Async and Await": "https://www.filepicker.io/api/file/6K5vOCXVSrKDD17eziuD",
    "80 - 12- Exercise": "https://www.filepicker.io/api/file/6YrJQnURTeGimCZe29PV",
    "81 - 1- Introducing MongoDB": "https://www.filepicker.io/api/file/YuxVZbrKT1Cu3KdLNWep",
    "82 - 2- Installing MongoDB on Mac": "https://www.filepicker.io/api/file/khKMThJQwaNpm9EwUkTt",
    "83 - 3- Installing MongoDB on Windows": "https://www.filepicker.io/api/file/gQ4SkSPASkihGO3oog7K",
    "84 - 4- Connecting to MongoDB": "https://www.filepicker.io/api/file/bom9hV0qRlOohXQoZpmS",
    "85 - 5- Schemas": "https://www.filepicker.io/api/file/e4uyaET7C7FEFELXZCFw",
    "86 - 6- Models": "https://www.filepicker.io/api/file/SR9HKfeQS6qUEDF1cBcx",
    "87 - 7- Saving a Document": "https://www.filepicker.io/api/file/X4qi1b2iQeSIsh64zQGV",
    "88 - 8- Querying Documents": "https://www.filepicker.io/api/file/7c041jP4Rm2pECOffcuP",
    "89 - 9- Comparison Query Operators": "https://www.filepicker.io/api/file/orBjefQe6kQY272T2Mtw",
    "90 - 10- Logical Query Operators": "https://www.filepicker.io/api/file/wFAXz85MTbelSAjFTiRB",
    "91 - 11- Regular Expressions": "https://www.filepicker.io/api/file/JokeIyJhRSqCFhRojqzD",
    "92 - 12- Counting": "https://www.filepicker.io/api/file/lWIu4G6hSGW2okT0kvap",
    "93 - 13- Pagination": "https://www.filepicker.io/api/file/gN4wlygrSdWHJOmKuvgj",
    "94 - 14- Exercise 1": "https://www.filepicker.io/api/file/W6Oy04cSKWoacg72UJlh",
    "95 - 15- Exercise 2": "https://www.filepicker.io/api/file/jGnJZyAgSFudKOwBu2ms",
    "96 - 16- Exercise 3": "https://www.filepicker.io/api/file/zqcQahfrRYutbGnbEG4j",
    "97 - 17- Updating a Document- Query First": "https://www.filepicker.io/api/file/tbwsYoEqTnaeKfnsngxP",
    "98 - 18- Updating a Document- Update First": "https://www.filepicker.io/api/file/0W7nNfcReOFtY2c9qdyX",
    "99 - 19- Removing Documents": "https://www.filepicker.io/api/file/u2o9jPzpQMW4rSpeLLhQ",
    "100 - CRUD Operations with Mongoose and MongoDB Recap": "https://www.filepicker.io/api/file/8PLSapMTVeWbBVLnNrxz",
    "101 - 1- Validation": "https://www.filepicker.io/api/file/PVhJ0xURzu6RUHrxHGST",
    "102 - 2- Built-in Validators": "https://www.filepicker.io/api/file/zuilD3k2R4SM0haZg9Om",
    "103 - 3- Custom Validators": "https://www.filepicker.io/api/file/gsXOwjzpRgu7YfhBKuNo",
    "104 - 4- Async Validators": "https://www.filepicker.io/api/file/gxID6tLTPCUgMizd7UBi",
    "105 - 5- Validation Errors": "https://www.filepicker.io/api/file/HFdRcV32QRcS4lhaOg2A",
    "106 - 6- SchemaType Options": "https://www.filepicker.io/api/file/EmsBIUFoRfmyx6nhSo7B",
    "107 - 7- Project- Add Persistence to Genres API": "https://www.filepicker.io/api/file/lbNSQ3eShmxKzRbiyYqG",
    "108 - 8- Project- Build the Customers API": "https://www.filepicker.io/api/file/BFGSMl5lS1ujD7FRNn2E",
    "109 - 9- Restructuring the Project": "https://www.filepicker.io/api/file/y66nZ1MrSvGioscZOVKw",
    "110 - Mongoose Validation Recap": "https://www.filepicker.io/api/file/KXGguOQGQ96S7g6hCJwq",
    "111 - 1- Modelling Relationships": "https://www.filepicker.io/api/file/CGeGbwIPThKt4NBynBMx",
    "112 - 2- Referencing Documents": "https://www.filepicker.io/api/file/dRNtJS44SZiRj04Ykqsn",
    "113 - 3- Population": "https://www.filepicker.io/api/file/PAmzuEOR8aDHqnScsHzZ",
    "114 - 4- Embedding Documents": "https://www.filepicker.io/api/file/X42TgOmSBC86xJYY05IO",
    "115 - 5- Using an Array of Sub-documents": "https://www.filepicker.io/api/file/n60iUdTvRtOx33Ngl2WA",
    "116 - 6- Project- Build the Movies API": "https://www.filepicker.io/api/file/L52BrtIvSZW0tkY73qjx",
    "117 - 7- Project- Build the Rentals API": "https://www.filepicker.io/api/file/UeN7bGAcQtCbu4Zizzqm",
    "118 - 8- Transactions": "https://www.filepicker.io/api/file/DWbB7jQ5SZa9lC8ITV4P",
    "119 - 9- ObjectID": "https://www.filepicker.io/api/file/XSCLa62VTPa5nykSUd1p",
    "120 - 10- Validating ObjectIDs": "https://www.filepicker.io/api/file/IzQHoDsQQuKMHyTAWcp0",
    "121 - 11- A Better Implementation": "https://www.filepicker.io/api/file/B3ei53dYTvh4c7OFGZHw",
    "122 - Mongoose- Modelling Relationships between Connected Data Recap": "https://www.filepicker.io/api/file/38ZAJb4oSTGiAEDbJHyW",
    "123 - 1- Introduction": "https://www.filepicker.io/api/file/MHPzonjmTsKqQeNzaBTY",
    "124 - 2- Creating the User Model": "https://www.filepicker.io/api/file/pjH9R394QAm6ICVlRvM3",
    "125 - 3- Registering Users": "https://www.filepicker.io/api/file/ZMjbH4QLS6J4r2NMIOpy",
    "126 - 4- Using Lodash": "https://www.filepicker.io/api/file/x1uLydW5T2zCaEl05cew",
    "127 - 5- Hashing Passwords": "https://www.filepicker.io/api/file/ojT10oi3TSycWAN6pwCA",
    "128 - 6- Authenticating Users": "https://www.filepicker.io/api/file/W3CDHzQTcafyMKBvl0J1",
    "129 - 7- Testing the Authentication": "https://www.filepicker.io/api/file/eS1PAmcQ2SdQbNHdBhe2",
    "130 - 8- JSON Web Tokens": "https://www.filepicker.io/api/file/4qiYXjelSh62ePkdepnI",
    "131 - 9- Generating Authentication Tokens": "https://www.filepicker.io/api/file/CjGzIuXAQfm8DHVUFFTy",
    "132 - 10- Storing Secrets in Environment Variables": "https://www.filepicker.io/api/file/uIlUeVQ0qZz5N621rZaw",
    "133 - 11- Setting Response Headers": "https://www.filepicker.io/api/file/TWtVBMGQpG8xkS27UP6M",
    "134 - 12- Encapsulating Logic in Mongoose Models": "https://www.filepicker.io/api/file/3nIfaSkLQwyubpJqN59O",
    "135 - 13- Authorization Middleware": "https://www.filepicker.io/api/file/UPXwek0lQhKPJG6EmwSg",
    "136 - 14- Protecting Routes": "https://www.filepicker.io/api/file/znSwM3BgQ6yMbQm5NLRO",
    "137 - 15- Getting the Current User": "https://www.filepicker.io/api/file/EYzh13QBQiBA4KtvQilz",
    "138 - 16- Logging Out Users": "https://www.filepicker.io/api/file/rLxMQxT3Rle3X9F6r72v",
    "139 - 17- Role-based Authorization": "https://www.filepicker.io/api/file/KpYh7DirRuGjXMqKOupW",
    "140 - 18- Testing the Authorization": "https://www.filepicker.io/api/file/iwEmmx2LTjavGOeYW3j3",
    "141 - Authentication and Authorization Recap": "https://www.filepicker.io/api/file/ihg3JBI9RH68CkuoRpIJ",
    "142 - 1- Introduction": "https://www.filepicker.io/api/file/FL1YHcL0TaSvs8iQj0k1",
    "143 - 2- Handling Rejected Promises": "https://www.filepicker.io/api/file/wlbhKAbnSWmzFGp35OzY",
    "144 - 3- Express Error Middleware": "https://www.filepicker.io/api/file/9JAHCvEBRaKyFpqmMB9n",
    "145 - 4- Removing Try Catch Blocks": "https://www.filepicker.io/api/file/NWizkZnGSSCu9Mx1Nvu1",
    "146 - 5- Express Async Errors": "https://www.filepicker.io/api/file/yGWx1r8yQm2IU3IJyToo",
    "147 - 6- Logging Errors": "https://www.filepicker.io/api/file/nSLqfA1iRVmBaJsfMVTv",
    "148 - 7- Logging to MongoDB": "https://www.filepicker.io/api/file/Qa0W7PNpShKvBpthBgsg",
    "149 - 8- Uncaught Exceptions": "https://www.filepicker.io/api/file/GEx1MXBqQxemkviNU3gg",
    "150 - 9- Unhandled Promise Rejections": "https://www.filepicker.io/api/file/RIGGiITMQC2nYRGaAfU2",
    "151 - 10- Error Handling Recap": "https://www.filepicker.io/api/file/xsLJYlaxSOXlQ7EgAwSz",
    "152 - 11- Extracting Routes": "https://www.filepicker.io/api/file/OXpmkHWARPK1nEweUkaQ",
    "153 - 12- Extracting the Db Logic": "https://www.filepicker.io/api/file/ttYxvHDS8WNiv7H9Nhwi",
    "154 - 13- Extracting the Logging Logic": "https://www.filepicker.io/api/file/XQOMGJuFQd6GOAJXwGZA",
    "155 - 14- Extracting the Config Logic": "https://www.filepicker.io/api/file/Oj0BlgFsSiE0Bl8seJas",
    "156 - 15- Extracting the Validation Logic": "https://www.filepicker.io/api/file/WIpf5odDQQ2MCWnOQrAo",
    "157 - 16- Showing Unhandled Exceptions on the Console": "https://www.filepicker.io/api/file/mXi4HjU3QAWg5HNPJX8f",
    "158 - 17- Handling and Logging Errors Recap": "https://www.filepicker.io/api/file/tUV3t9DQ0mIvr2Ehn10Q",
    "159 - 1- What is Automated Testing": "https://www.filepicker.io/api/file/KuD8CFF8Tv6BD1mjEsG6",
    "160 - 2- Benefits of Automated Testing": "https://www.filepicker.io/api/file/oCUyjfmTj6oTwhpFeiBN",
    "161 - 3- Types of Tests": "https://www.filepicker.io/api/file/cq9OqSdKRq6HtZ0Qz1A5",
    "162 - 4- Test Pyramid": "https://www.filepicker.io/api/file/PZiooYVRimTkltzuS5HK",
    "163 - 5- Tooling": "https://www.filepicker.io/api/file/oMGWtpQcyXM56tCwIawl",
    "164 - 6- Writing Your First Unit Test": "https://www.filepicker.io/api/file/5ZReFR3qTu2vFR58gYOj",
    "165 - 7- Testing Numbers": "https://www.filepicker.io/api/file/Y69tjBYuSv2IWU6Tw5bD",
    "166 - 8- Grouping Tests": "https://www.filepicker.io/api/file/01ibWZ0bSO2W5D2oa4AN",
    "167 - 9- Refactoring with Confidence": "https://www.filepicker.io/api/file/jEp1GkFZSGyN7kSmpdRL",
    "168 - 10- Testing Strings": "https://www.filepicker.io/api/file/4PFsKDnQ1CPNygH6gm8A",
    "169 - 11- Testing Arrays": "https://www.filepicker.io/api/file/jaLBKjqYSUSJHdLg22yw",
    "170 - 12- Testing Objects": "https://www.filepicker.io/api/file/ZRhdIPwuRoKJunprrcng",
    "171 - 13- Testing Exceptions": "https://www.filepicker.io/api/file/CKYsQ1V0S8GAYyzhxzZX",
    "172 - 14- Continuously Running Tests": "https://www.filepicker.io/api/file/KWKhx77xQAiT4wvmO1vj",
    "173 - 15- Exercise- Testing the FizzBuz": "https://www.filepicker.io/api/file/hsKmjRTRoanz8558o8KH",
    "174 - 16- Creating Simple Mock Functions": "https://www.filepicker.io/api/file/FSJXpGw8RwiEX7KBi4pI",
    "175 - 17- Interaction Testing": "https://www.filepicker.io/api/file/cwPz5FkKTLGmJMZtt3jy",
    "176 - 18- Jest Mock Functions": "https://www.filepicker.io/api/file/A5kPCCBxT9yF5CJrNkPi",
    "177 - 19- What to Unit Test": "https://www.filepicker.io/api/file/H2FjY8LfTa6vcOqhw6zd",
    "178 - 20- Exercise": "https://www.filepicker.io/api/file/tXZS7uTrSrLVKXm4L9gH",
    "179 - Unit Testing Recap": "https://www.filepicker.io/api/file/OxfBN43XRRKMg4KAYbYY",
    "180 - 1- Introduction": "https://www.filepicker.io/api/file/GANeARoaTiOJNcs5rFC5",
    "181 - 2- Preparing the App": "https://www.filepicker.io/api/file/tJEgrNdKTUWvVWKUZBe0",
    "182 - 3- Setting Up the Test Db": "https://www.filepicker.io/api/file/vQwXUsDsSOmNNcs3z2b9",
    "183 - 4- Your First Integration Test": "https://www.filepicker.io/api/file/MKylN2qTd25faMJv8yBA",
    "184 - 5- Populating the Test Db": "https://www.filepicker.io/api/file/fLx63Yw1R6qlqpTq8CYr",
    "185 - 6- Testing Routes with Parameters": "https://www.filepicker.io/api/file/S0Tj4jFiSwa5qWK3Pz6l",
    "186 - 7- Validating ObjectIDs": "https://www.filepicker.io/api/file/zreWULsWQKmBY18ewpYf",
    "187 - 8- Refactoring with Confidence": "https://www.filepicker.io/api/file/gAcpUI1kROaERNADcHH5",
    "188 - 9- Testing the Authorization": "https://www.filepicker.io/api/file/068yPFhbS4WLOOpHaev0",
    "189 - 10- Testing the Invalid Inputs": "https://www.filepicker.io/api/file/FfGv3ugeQcSHnudAnAW7",
    "190 - 11- Testing the Happy Path": "https://www.filepicker.io/api/file/4A5ub9wvRWWXker1R7Lg",
    "191 - 12- Writing Clean Tests": "https://www.filepicker.io/api/file/DpXuwkebTIKrUwyPolwP",
    "192 - 13- Testing the Auth Middleware": "https://www.filepicker.io/api/file/G919kmnDTHlgQoDOU9Ug",
    "193 - 14- Unit Testing the Auth Middleware": "https://www.filepicker.io/api/file/RsadEyTQPo7sAaDn6wfQ",
    "194 - 15- Code Coverage": "https://www.filepicker.io/api/file/L1dIEqZkTZGfFz41LWV8",
    "195 - 16- Exercise": "https://www.filepicker.io/api/file/fSQu6wLiRs2NiLXdy5pr",
    "196 - Integration Testing Recap": "https://www.filepicker.io/api/file/uK0bTQGQQStgAxkdEuK2",
    "197 - 1- What is Test-driven Development": "https://www.filepicker.io/api/file/Fr1Z539S5S1esq7hCYBw",
    "198 - 2- Implementing the Returns": "https://www.filepicker.io/api/file/E2W8jvioSpyUw3DdJF71",
    "199 - 3- Test Cases": "https://www.filepicker.io/api/file/3pdEwkgSjeNmRAz9dXzn",
    "200 - 4- Populating the Database": "https://www.filepicker.io/api/file/5f8prqrPTi2sgQgjqzvQ",
    "201 - 5- Testing the Authorization": "https://www.filepicker.io/api/file/z09sj9lWTlzCWwdhMx9I",
    "202 - 6- Testing the Input": "https://www.filepicker.io/api/file/e6pgRSFXS2CjcYC6hNQQ",
    "203 - 7- Refactoring Tests": "https://www.filepicker.io/api/file/KY8kjvscQTKN1FhZFxXM",
    "204 - 8- Looking Up an Object": "https://www.filepicker.io/api/file/Bi1KimDgRBi5zfJpFRNV",
    "205 - 9- Testing if Rental Processed": "https://www.filepicker.io/api/file/sEw0ZwkjSZKtDMdhNwYU",
    "206 - 10- Testing the Valid Request": "https://www.filepicker.io/api/file/R9O4AEHhRH2GCZMFeYm1",
    "207 - 11- Testing the ReturnDate": "https://www.filepicker.io/api/file/Jfihzg4FQSyetbcbxcX4",
    "208 - 12- Testing the RentalFee": "https://www.filepicker.io/api/file/mHXa1NrSTFiUi1iSbuYD",
    "209 - 13- Testing the Movie Stock": "https://www.filepicker.io/api/file/PJuhgfRqQdGm5sUDmb1n",
    "210 - 14- Testing the Response": "https://www.filepicker.io/api/file/xOusujanS7e5oiGX05dN",
    "211 - 15- Refactoring the Validation Logic": "https://www.filepicker.io/api/file/PIlgceqpRIiWV4mZ0QDC",
    "212 - 16- Mongoose Static Methods": "https://www.filepicker.io/api/file/v4lNdm3TRn6Zg5gT7XfE",
    "213 - 17- Refactoring the Domain Logic": "https://www.filepicker.io/api/file/NV0b2XtTwuSOvrBMpnv8",
    "214 - 1- Introduction": "https://www.filepicker.io/api/file/ReR3AypaTEiZ2ymDTtQw",
    "215 - 2- Preparing the App for Production": "https://www.filepicker.io/api/file/VMy8afgS3ifZX1BVZ0Bw",
    "216 - 3- Getting Started with Heroku": "https://www.filepicker.io/api/file/x77kQcKARgm8F8oEwxvj",
    "217 - 4- Preparing the App for Heroku": "https://www.filepicker.io/api/file/O9yhokbkT82lxsJu0fn6",
    "218 - 5- Adding the Code to a Git Repository": "https://www.filepicker.io/api/file/67HjqHT62qHaVP6q2grj",
    "219 - 6- Deploying to Heroku": "https://www.filepicker.io/api/file/u0lZEnAaT8yjDl3aJpOm",
    "220 - 7- Viewing Logs": "https://www.filepicker.io/api/file/xQCclmZ3SZ2eSvEpu99t",
    "221 - 8- Setting Environment Variables": "https://www.filepicker.io/api/file/4XEJWL5cQJGWuhe1mr88",
    "222 - 9- MongoDB in the Cloud": "https://www.filepicker.io/api/file/g3Vhe06TgOoj0xFyBANi"
}
