{
    "0 - 1- Introduction": "https://www.filepicker.io/api/file/RiX2sEyESBywgnl7dXLH",
    "1 - 2- Source Code": "https://www.filepicker.io/api/file/stCus7UmRVSyqy5tqf9Y",
    "2 - 1- Introduction": "https://www.filepicker.io/api/file/sh3PhNVnTamYTPmUBdke",
    "3 - 2- What are Trees": "https://www.filepicker.io/api/file/WeTUMgSqQYq4xxZCKSqp",
    "4 - 3- Exercise- Populating a Binary Search Tree": "https://www.filepicker.io/api/file/xjk5jUY1Qc2HLFOHhZKm",
    "5 - 4- Exercise- Building a Tree": "https://www.filepicker.io/api/file/NvvhXeMeSFqG0KAeMVLe",
    "6 - 5- Solution- insert()": "https://www.filepicker.io/api/file/MOU0AuMDQf2CqoEUsDqw",
    "7 - 6- Solution- find()": "https://www.filepicker.io/api/file/TcFE4FbyRmWUWU6Afepn",
    "8 - 7- Traversing Trees": "https://www.filepicker.io/api/file/n6cKurGBTyPgMnXxFmrw",
    "9 - 8- Exercise- Tree Traversal": "https://www.filepicker.io/api/file/ULzdJTUMQ6kWbyN5Y1zg",
    "10 - 9- Recursion": "https://www.filepicker.io/api/file/8qXsUMSsaxLcfdRaY6QZ",
    "11 - 10- Depth First Traversals": "https://www.filepicker.io/api/file/i07iy24R3aZUTXiTLTkp",
    "12 - 11- Depth and Height of Nodes": "https://www.filepicker.io/api/file/l6tte6FWSquTdRpeQbsW",
    "13 - 12- Minimum Value in a Tree": "https://www.filepicker.io/api/file/RJzKMkoTpmxBZIxOrmiQ",
    "14 - 13- Exercise- Equality Checking": "https://www.filepicker.io/api/file/EFm4jgN7RNaOFSW6selz",
    "15 - 14- Solution- Equality Checking": "https://www.filepicker.io/api/file/E1DRoiyVTWGe8dcwGby4",
    "16 - 15- Exercise- Validating Binary Search Trees": "https://www.filepicker.io/api/file/fXeMi03vSW3wFJ33U3QN",
    "17 - 16- Solution- Validating Binary Search Trees": "https://www.filepicker.io/api/file/fNwfxs6QcW2dbgRNhWHQ",
    "18 - 17- Exercise- Nodes at K Distance": "https://www.filepicker.io/api/file/dPL3VVU4Q3yKQRnqYRWX",
    "19 - 18- Solution- Nodes at K Distance from the Root": "https://www.filepicker.io/api/file/1UnE4kqoTnac9F4BlrSZ",
    "20 - 19- Level Order Traversal": "https://www.filepicker.io/api/file/rHXrHbRSUSBV8Hjvqojm",
    "21 - 20- Trees- Exercises": "https://www.filepicker.io/api/file/Uy1luhgHSDq27QgSyaJi",
    "22 - 21- Summary": "https://www.filepicker.io/api/file/93OEQnjSVC09GeBhsRTu",
    "23 - 1- Introduction": "https://www.filepicker.io/api/file/g5Yej9rrSlaWIifKQTO9",
    "24 - 2- Balanced and Unbalanced Trees": "https://www.filepicker.io/api/file/qB3mljcOTYS60jxB9tfY",
    "25 - 3- Rotations": "https://www.filepicker.io/api/file/JFj6uusFRWqW4WGcuGhY",
    "26 - 4- AVL Trees": "https://www.filepicker.io/api/file/QQjEd9fPQAmpyOAqhj3o",
    "27 - 5- Exercise: AVL Rotations": "https://www.filepicker.io/api/file/yBoKaI8Rsq9mDCbzWzbw",
    "28 - 6- Exercise- Building an AVL Tree": "https://www.filepicker.io/api/file/K7cBlojQGK2VqJr6r2Ri",
    "29 - 7- Solution- insert()": "https://www.filepicker.io/api/file/7QWuXsL9R7YDPCcdprsK",
    "30 - 8- Exercise- Height Calculation": "https://www.filepicker.io/api/file/9nYxmj3sTMqzU1qKzfJ8",
    "31 - 9- Solution- Height Calculation": "https://www.filepicker.io/api/file/jm32G3SjUzt8GcVoM4Q1",
    "32 - 10- Exercise- Balance Factor": "https://www.filepicker.io/api/file/uwwWWVbTEWvW8AaGxQWu",
    "33 - 11- Solution- Balance Factor": "https://www.filepicker.io/api/file/J7EF4ldGQ5evkxDn2OYF",
    "34 - 12- Exercise- Detecting Rotations": "https://www.filepicker.io/api/file/y7Yr4jxQTbinNLItv603",
    "35 - 13- Solution- Detecting Rotations": "https://www.filepicker.io/api/file/ntQZxmj0QBSZE5UTSDd6",
    "36 - 14- Exercise- Implementing Rotations": "https://www.filepicker.io/api/file/x2NPBAM9SBG58tATl7cd",
    "37 - 15- Solution- Implementing Rotations": "https://www.filepicker.io/api/file/JkNcWPZfRxmMhVyqh6DC",
    "38 - 16- AVL Trees- Exercises": "https://www.filepicker.io/api/file/cZZwFcoDRxa4kFaSQo0G",
    "39 - 17- Summary": "https://www.filepicker.io/api/file/MMpzdpguQICrqvKB2dvi",
    "41 - 1- Introduction": "https://www.filepicker.io/api/file/ybD5peVST363FopTOBtu",
    "42 - 2- What are Heaps": "https://www.filepicker.io/api/file/IC7cYJRvRoKtCqiD7UGJ",
    "43 - 3- Exercise- Working with Heaps": "https://www.filepicker.io/api/file/u0TkMsIgSZe6x4hYZTWr",
    "44 - 4- Exercise- Building a Heap": "https://www.filepicker.io/api/file/ZvkjOv0RCifT4mOhWj2Q",
    "45 - 5- Solution- insert()": "https://www.filepicker.io/api/file/cacPKklESTCbVBRpl3rG",
    "46 - 6- Solution- remove()": "https://www.filepicker.io/api/file/idStuMaSRUimuUppXqwt",
    "47 - 7- Solution - Edge Cases": "https://www.filepicker.io/api/file/tfUx3SCXQrGWEyXCiZZz",
    "48 - 8- Heap Sort": "https://www.filepicker.io/api/file/yho5p38ZQhuZKv5OUIpG",
    "49 - 9- Priority Queues": "https://www.filepicker.io/api/file/OlgJx4xTOuzGt8Who4Og",
    "50 - 10- Exercise- Heapify": "https://www.filepicker.io/api/file/0d39IdJvTpeE8ofD0xaY",
    "51 - 11- Solution- Heapify": "https://www.filepicker.io/api/file/Bs2oxXceRdSdLqEQh784",
    "52 - 12- Solution- Optimization": "https://www.filepicker.io/api/file/ZGGLDrElRq2286SlHqYc",
    "53 - 13- Exercise- Kth Largest Item": "https://www.filepicker.io/api/file/TedpsEqfTBuoXXj8GmWj",
    "54 - 14- Solution- Kth Largest Item": "https://www.filepicker.io/api/file/uoJcKaKTVelaMHtXopOP",
    "55 - 15- Heaps- Exercises": "https://www.filepicker.io/api/file/L1kGuvSPRCKkJKhAdZ8f",
    "56 - 16- Summary": "https://www.filepicker.io/api/file/aE3LEyleSHe0pSktHC87",
    "57 - 1- Introduction": "https://www.filepicker.io/api/file/74UrKV8OR0WxNsZkTVZN",
    "58 - 2- What are Tries": "https://www.filepicker.io/api/file/4ZwMmGp1T96caVjJCA0I",
    "59 - 3- Exercise- Populating a Trie": "https://www.filepicker.io/api/file/ieDgwyyLRAWkl74L6ok6",
    "60 - 4- Exercise- Building a Trie": "https://www.filepicker.io/api/file/4nEAjJxS32qDy9WJ2aa8",
    "61 - 5- Solution- Building a Trie": "https://www.filepicker.io/api/file/SHzd0muRfsdfXRGDYhXQ",
    "62 - 6- An Implementation with a HashTable": "https://www.filepicker.io/api/file/pZVVRNwQeyRmh2iuv0Ij",
    "63 - 7- A Better Abstraction": "https://www.filepicker.io/api/file/gNwYL2wWTH6j4iu4y4Q3",
    "64 - 8- Exercise- Looking Up a Word": "https://www.filepicker.io/api/file/5TjXpbssQwSycPlmqYHt",
    "65 - 9- Solution- Looking Up a Word": "https://www.filepicker.io/api/file/CT0P0tavQlWCKb2fZINZ",
    "66 - 10- Traversals": "https://www.filepicker.io/api/file/wpw9OrLNQl25RpxnjdUG",
    "67 - 11- Exercise- Removing a Word": "https://www.filepicker.io/api/file/w8q2HGJTwyIytLGi6d3A",
    "68 - 12- Solution- Removing a Word": "https://www.filepicker.io/api/file/ndJ68eAySVy8QyEwEnvA",
    "69 - 13- Exercise- Auto Completion": "https://www.filepicker.io/api/file/S9rN0ZHwQ9S3e1DGyuD6",
    "70 - 14- Solution- Auto Completion": "https://www.filepicker.io/api/file/qBjFlbsLSuK0NtOuQ8DA",
    "71 - 15- Tries- Exercises": "https://www.filepicker.io/api/file/uKGXBMclRUu7X2GoIrr5",
    "72 - 16- Summary": "https://www.filepicker.io/api/file/dAmbzVgcQEaCFTRidK80",
    "74 - 1- Introduction": "https://www.filepicker.io/api/file/ock9A1tZT8qNekinKQXR",
    "75 - 2- What are Graphs": "https://www.filepicker.io/api/file/a0T3ej98S1K9dszUjLW3",
    "76 - 3- Adjacency Matrix": "https://www.filepicker.io/api/file/WhJNE8YXT5m2Va6z3mtn",
    "77 - 4- Adjacency List": "https://www.filepicker.io/api/file/5IJnA6g5TXAeLhHPgG0i",
    "78 - 5- Exercise- Building a Graph": "https://www.filepicker.io/api/file/GjPL1vBYQuqP17HqUjgu",
    "79 - 6- Solution- Adding Nodes and Edges": "https://www.filepicker.io/api/file/qPtiW9WTiirw8K0Dw3x2",
    "80 - 7- Solution- Removing Nodes and Edges": "https://www.filepicker.io/api/file/5q5xWsxvSCihLLhQ2KBm",
    "81 - 8- Traversal Algorithms": "https://www.filepicker.io/api/file/ZwrOFjPSs6EtJcLSU0Lw",
    "82 - 9- Exercise- Traversal Algorithms": "https://www.filepicker.io/api/file/EBbVrwU2TtWa1QYunfvi",
    "83 - 10- Exercise- Depth-first Traversal (Recursive)": "https://www.filepicker.io/api/file/AFMSCqpRbmPhF3AuVwag",
    "84 - 11- Solution- Depth-first Traversal (Recursive)": "https://www.filepicker.io/api/file/s8Z0S3CCQVCIExpGJvoX",
    "85 - 12- Exercise- Depth-first Traversal (Iterative)": "https://www.filepicker.io/api/file/HRaUNjEQVOKIyE3v62xu",
    "86 - 13- Solution- Depth-first Traversal (Iterative)": "https://www.filepicker.io/api/file/JtxI6JMLTzCM6gMc9j74",
    "87 - 14- Exercise- Breadth-first Traversal (Iterative)": "https://www.filepicker.io/api/file/wTiVzeTT6m2xurmpJrTP",
    "88 - 15- Solution- Breadth-first Traversal": "https://www.filepicker.io/api/file/mMy1lJwxS5Uz1QAdGhiC",
    "89 - 16- Exercise- Topological Sorting": "https://www.filepicker.io/api/file/SkDFWGiS5lV0kJvxoCgS",
    "90 - 17- Solution- Topological Sort": "https://www.filepicker.io/api/file/UMHqdcZRR8KeWBaaJiQX",
    "91 - 18- Exercise- Cycle Detection (Directed Graphs)": "https://www.filepicker.io/api/file/Liyy52VpSTaqAumCmo1Y",
    "92 - 19- Solution- Cycle Detection (Directed Graphs)": "https://www.filepicker.io/api/file/oiz1vrMZTASylj5P8xP1",
    "93 - 20- Graphs Summary": "https://www.filepicker.io/api/file/y62YdCdbT0SwiUU9fdYh",
    "94 - 1- Introduction": "https://www.filepicker.io/api/file/qr9qQSzkT6eDJixEILCO",
    "95 - 2- Exercise- Weighted Graphs": "https://www.filepicker.io/api/file/ZMId6DZR5CgRlR25SYI4",
    "96 - 3- Solution- Weighted Graphs": "https://www.filepicker.io/api/file/DOLMuksfSC0bmS5dyTmk",
    "97 - 4- An Object-oriented Solution": "https://www.filepicker.io/api/file/jLL8pjiUSTOq4Y71qBpT",
    "98 - 5- Dijkstra's Shortest Path Algorithm": "https://www.filepicker.io/api/file/G6ZXzciQKu9m2ZGFFx24",
    "99 - 6- Exercise- Getting the Shortest Distance": "https://www.filepicker.io/api/file/KLB5fsI3Q0G80xHISBfe",
    "100 - 7- Solution- The Shortest Distance": "https://www.filepicker.io/api/file/plE7BBkpRmWFKqaBdS4w",
    "101 - 8- Solution- Shortest Path": "https://www.filepicker.io/api/file/ntYDwLmRQCjDn7660q0o",
    "102 - 9- Exercise- Cycle Detection (Undirected Graphs)": "https://www.filepicker.io/api/file/V3TWZDBS824FYE5HmdA6",
    "103 - 10- Solution- Cycle Detection (Undirected Graphs)": "https://www.filepicker.io/api/file/xZeedLMvS1uCnWTa3N0V",
    "104 - 11- Minimum Spanning Tree": "https://www.filepicker.io/api/file/Y2wdZU1HSyulhQriSQSQ",
    "105 - 12- Exercise- Prim's Algorithm": "https://www.filepicker.io/api/file/Yg5GFiVWSbaOrAeBkFip",
    "106 - 13- Solution- Prim's Algorithm": "https://www.filepicker.io/api/file/hWhemKCfQaWqd37VQTBt",
    "107 - 14- Course Wrap Up": "https://www.filepicker.io/api/file/PZ7XPKMRguoqbKxiMjdM"
}
