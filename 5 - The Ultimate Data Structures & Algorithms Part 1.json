{
    "0 - 1- Course Outline": "https://www.filepicker.io/api/file/70YKMGJ5QT2YfN8mCeE2",
    "1 - 2- Source Code": "https://www.filepicker.io/api/file/RHR8uEj0TIUoB07XpQvB",
    "2 - 1- Introduction": "https://www.filepicker.io/api/file/jLfZB3gQamNJPq8ofDhN",
    "3 - 2- What is Big O": "https://www.filepicker.io/api/file/xg9GxOKaS2CgP1miKpmX",
    "4 - 3- O(1)": "https://www.filepicker.io/api/file/fWO9ymnlQ7uDT4K9s5Ia",
    "5 - 4- O(n)": "https://www.filepicker.io/api/file/RF7hTREHQTuj0rF9wQeg",
    "6 - 5- O(n^2)": "https://www.filepicker.io/api/file/VgZ6YKzSQ3aSigduN78q",
    "7 - 6- O(log n)": "https://www.filepicker.io/api/file/LIOshrFR7OOUYfMXI5D3",
    "8 - 7- O(2^n)": "https://www.filepicker.io/api/file/R9tUqYo0TSa1MVYzNf12",
    "9 - 8- Space Complexity": "https://www.filepicker.io/api/file/DC6vhfyWSr625KQPNTsr",
    "10 - 9- Cheat Sheet": "https://www.filepicker.io/api/file/Z6uNbEgpQyaKrb0XxrJN",
    "11 - 1- Introduction": "https://www.filepicker.io/api/file/S6ufYgOQ3aC9guw5mv3b",
    "12 - 2- Understanding Arrays": "https://www.filepicker.io/api/file/TjBslJYSimP5XI6rlGaS",
    "13 - 3- Working with Arrays in Java": "https://www.filepicker.io/api/file/IztFh1elTu6dKB9i9OjA",
    "14 - 4- Exercise- Array Class": "https://www.filepicker.io/api/file/CqG0voaSQFSbV9dNKzdk",
    "15 - 5- Solution- Creating the Class": "https://www.filepicker.io/api/file/dGfqkDeYRPa3uueglloQ",
    "16 - 6- Solution- insert()": "https://www.filepicker.io/api/file/GdB8mQcdQY6IejlyQpIK",
    "17 - 7- Solution- removeAt()": "https://www.filepicker.io/api/file/wTrvEjkxQkWGxp2Z3rbZ",
    "18 - 8- Solution- indexOf()": "https://www.filepicker.io/api/file/j1P3UDSQW6s5TtzjcZLQ",
    "19 - 9- Dynamic Arrays": "https://www.filepicker.io/api/file/EyStyAJSQ82SIR20ScGd",
    "20 - 10- Arrays- Exercises": "https://www.filepicker.io/api/file/QqIYQBDRdqiB7O0AmyTs",
    "21 - 11- Summary": "https://www.filepicker.io/api/file/niRGDIemR7vOWWoT3JKf",
    "22 - 1- Introduction": "https://www.filepicker.io/api/file/WJrLWIh5TS2Jb2PtzMMZ",
    "23 - 2- What are Linked Lists": "https://www.filepicker.io/api/file/YekxiRODRkWIxkVTivTF",
    "24 - 3- Working with Linked Lists": "https://www.filepicker.io/api/file/bZhhKsn6QmKeQqXQHz9b",
    "25 - 4- Exercise- Building a Linked List": "https://www.filepicker.io/api/file/3q0Oqrf3QJeTR00lp1Gx",
    "26 - 5- Solution- addLast": "https://www.filepicker.io/api/file/xXUZupSQiRcVYXLvc4xg",
    "27 - 6- Solution- addFirst": "https://www.filepicker.io/api/file/cjIvN1LoQAWSdSsZWcSd",
    "28 - 7- Solution- indexOf": "https://www.filepicker.io/api/file/lEBHmobPREmnnkOXQGlH",
    "29 - 8- Solution- contains": "https://www.filepicker.io/api/file/WaQASRESSW5fiMKy2gVV",
    "30 - 9- Solution- removeFirst": "https://www.filepicker.io/api/file/MaCaiVOGSBauDifggtny",
    "31 - 10- Solution- removeLast": "https://www.filepicker.io/api/file/iCB1dhmgTQyzbUprNR3p",
    "32 - 11- Implementing size()": "https://www.filepicker.io/api/file/fwck8BHbTlW7nP90SJu0",
    "33 - 12- Converting Linked Lists to Arrays": "https://www.filepicker.io/api/file/8904CKPjSSGtRZZbje5z",
    "34 - 13- Cheat Sheets": "https://www.filepicker.io/api/file/NEXxfO4USOWGff7m51vD",
    "35 - 14- Arrays vs Linked Lists": "https://www.filepicker.io/api/file/t4BcQLfhQymbgdvkzH1S",
    "36 - 15- Types of Linked Lists": "https://www.filepicker.io/api/file/jHnQIsPTS3ubQQzrha8y",
    "37 - 16- Exercise- Reversing a Linked List": "https://www.filepicker.io/api/file/fBkbAWZTTsqxy5fMhIsk",
    "38 - 16- Exercise- Reversing a Linked List": "https://www.filepicker.io/api/file/fBkbAWZTTsqxy5fMhIsk",
    "39 - 18- Exercise- Kth Node from the End": "https://www.filepicker.io/api/file/T9UOhjidSlOGBBQse98L",
    "40 - 17- Solution- Reversing a Linked List": "https://www.filepicker.io/api/file/YFnFmFLTTXa4UBGqPivx",
    "41 - 20- Linked Lists- Exercises": "https://www.filepicker.io/api/file/cifZS6cSL2rJvvOecnBc",
    "42 - 21- Summary": "https://www.filepicker.io/api/file/0UBgmytrRd2Ik2ogs3cs",
    "44 - 1- Introduction": "https://www.filepicker.io/api/file/fz4BsciMRe2j0HxJRaiF",
    "45 - 2- What are Stacks": "https://www.filepicker.io/api/file/OxbLsmWnQiCwprfG9QYM",
    "46 - 3- Working with Stacks": "https://www.filepicker.io/api/file/ERVtyV7Sy6SUNKMFi4Yy",
    "47 - 4- Exercise- Reversing a String": "https://www.filepicker.io/api/file/1DvZ7UUSkKZHZpa7fGAI",
    "48 - 5- Solution - Reversing a String": "https://www.filepicker.io/api/file/w9zzNK4eSA2lMXKbGj7n",
    "49 - 6- Exercise- Balanced Expressions": "https://www.filepicker.io/api/file/kbWPoMjQOvJD8iJdPsQu",
    "50 - 7- Solution- A Basic Implementation": "https://www.filepicker.io/api/file/UWT9buN0SB2wDUeyRiGc",
    "51 - 8- Solution- Supporting Other Brackets": "https://www.filepicker.io/api/file/qlZsLVGxTSKJTCy7jNsE",
    "52 - 9- Solution- First Refactoring": "https://www.filepicker.io/api/file/cOZJOBZS9OhFMj12kroe",
    "53 - 10- Solution- Second Refactoring": "https://www.filepicker.io/api/file/dda072lQS167MAiKoiUO",
    "54 - 11- Exercise- Building a Stack Using an Array": "https://www.filepicker.io/api/file/l1MVe8sCTAK4cRGT24OF",
    "55 - 12- Solution- Implementing a Stack Using an Array": "https://www.filepicker.io/api/file/rvsxNNXRA6YRdCdfwjFR",
    "56 - 13- Stacks- Exercises": "https://www.filepicker.io/api/file/mvy4zyuDRcazczJz5lVm",
    "57 - 14- Summary": "https://www.filepicker.io/api/file/J07JrC0jQLalyTY9unph",
    "58 - 1- Introduction": "https://www.filepicker.io/api/file/owuc6BgIQmWf0nwDro9C",
    "59 - 2- What are Queues": "https://www.filepicker.io/api/file/g7kZlMPSXumf3PjyOPsb",
    "60 - 3- Queues in Java": "https://www.filepicker.io/api/file/9rzR1NMaRVqYZvR4Mv0E",
    "61 - 4- Exercise- Reversing a Queue": "https://www.filepicker.io/api/file/W9fglN8RASUNFQkxcpXq",
    "62 - 5- Solution- Reversing a Queue": "https://www.filepicker.io/api/file/6EtKN9t3SC2N39giQdkJ",
    "63 - 6- Exercise- Building a Queue Using an Array": "https://www.filepicker.io/api/file/c42yBxZaQrS8FulWMH24",
    "64 - 7- Solution- A Basic Implementation": "https://www.filepicker.io/api/file/p3ciwcgUQtW4vKNaikE8",
    "65 - 8- Solution- Circular Arrays": "https://www.filepicker.io/api/file/w1OoxgOaQlyBnjiliK2D",
    "66 - 9- Exercise- Implementing a Queue Using a Stack": "https://www.filepicker.io/api/file/IpAC94tFR9efv7eRwZ92",
    "67 - 10- Solution- Building a Queue Using a Stack": "https://www.filepicker.io/api/file/J9EzGMXITFyJMSk206kf",
    "68 - 11- Priority Queues": "https://www.filepicker.io/api/file/y88lC0pcRnuXy3lCNXAt",
    "69 - 12- Exercise- Building a Priority Queue": "https://www.filepicker.io/api/file/6r4W4xWhQkSnGmrwTm2Z",
    "70 - 13- Solution- Building a Priority Queue": "https://www.filepicker.io/api/file/kWg4jkgSQjiqV7lhvfHJ",
    "71 - 14- Solution- Refactoring": "https://www.filepicker.io/api/file/4PlLsGWXSOqk1625SAzY",
    "72 - 15- Queues- Exercises": "https://www.filepicker.io/api/file/XqQJyaH0Tjuw7Nb2odsh",
    "73 - 16- Summary": "https://www.filepicker.io/api/file/JucL3RTXSPKl1bKEBV7B",
    "74 - 1- Introduction": "https://www.filepicker.io/api/file/YlZgWHF6Qs25iyKoXsvZ",
    "75 - 2- What are Hash Tables": "https://www.filepicker.io/api/file/OFqGScEORAydl3wgXTO9",
    "76 - 3- Working with Hash Tables": "https://www.filepicker.io/api/file/bPg19RacSI2mT0cPJ7nn",
    "77 - 4- Exercise- Find the First Non-repeated Character": "https://www.filepicker.io/api/file/dH47B47yQ1SKGK79yW6e",
    "78 - 5- Solution- First Non-repeating Character": "https://www.filepicker.io/api/file/MhIcOZSQR1aeSLTIZYLV",
    "79 - 6- Sets": "https://www.filepicker.io/api/file/V1EzcJxfTOq9la4k089c",
    "80 - 7- Exercise- First Repeated Character": "https://www.filepicker.io/api/file/YEN5Gl2QgKhh3rpSan1U",
    "81 - 8- Solution- First Repeated Character": "https://www.filepicker.io/api/file/9awYNt41RJOCLXBXlYeu",
    "82 - 9- Hash Functions": "https://www.filepicker.io/api/file/8v1NhutXSB2wS12RU9hC",
    "83 - 10- Collisions": "https://www.filepicker.io/api/file/O173bYITToWVvhOLr8ZO",
    "84 - 11- Chaining": "https://www.filepicker.io/api/file/kx6agQTSHyv724Svpix6",
    "85 - 12- Open Addressing- Linear Probing": "https://www.filepicker.io/api/file/bkyJuZBpS6afSLxRzzth",
    "86 - 13- Open Addressing- Quadratic Probing": "https://www.filepicker.io/api/file/1rNsN4kBRBCBAVIEo1Em",
    "87 - 14- Open Addressing- Double Hashing": "https://www.filepicker.io/api/file/j22ZteLqSOKpXhlTigMH",
    "88 - 15- Exercise- Build a HashTable": "https://www.filepicker.io/api/file/jSy06uq4RnCRoMP6Fxlk",
    "89 - 16- Solution- put()": "https://www.filepicker.io/api/file/u765RQkfSYiGMUiWpBrw",
    "90 - 17- Solution- get()": "https://www.filepicker.io/api/file/cFEBG7GRRitXkG55YcCU",
    "91 - 18- Solution- remove()": "https://www.filepicker.io/api/file/z2yqsFZQEjcQ7cYMKa7g",
    "92 - 19- Solution- Refactoring": "https://www.filepicker.io/api/file/QAdy9HLSrORaFBEohJtw",
    "93 - 20- Hash Tables- Exercises": "https://www.filepicker.io/api/file/FtlIqnMlRSuMtthRGNQx",
    "94 - 21- Summary": "https://www.filepicker.io/api/file/T6pLvDOHSiJSCzTXzCtV",
    "95 - 22- Course Wrap Up": "https://www.filepicker.io/api/file/QSuzVqL5QgGa8Vo4Bl0I"
}
